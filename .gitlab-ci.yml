# -*- coding: utf-8 -*-
# vim: ft=yaml
---
include:
  - project: EOLE/infra/ci-tools
    ref: stable
    file: /templates/Rules.yaml
  - project: EOLE/infra/ci-tools
    ref: stable
    file: /templates/Runners/apps.education-docker.yaml
  - project: EOLE/infra/ci-tools
    ref: stable
    file: /templates/Git.yaml
  - project: EOLE/infra/ci-tools
    ref: stable
    file: /templates/Semantic-release.yaml
  - project: EOLE/infra/ci-tools
    ref: stable
    file: /templates/Docker.yaml

variables:
  # `ci-tools` default branch is `stable`
  STABLE_BRANCH: master
  IMAGE_NAME: laboite-blog_front

stages:
  - initial-checks
  - build
  - release

###############################################################################
# `initial-checks` stage: `commitlint`
###############################################################################
commitlint:
  stage: initial-checks
  extends: .git:commitlint


###############################################################################
# `build` stage: `build-docker`
###############################################################################
# Build on release tag and every branches except for `$STABLE_BRANCH`
# used only to create the release tag.
#
# The ordering is important:
# 1. exclude schedules and drafts
# 2. include `on-release-tag` which must match before `not-on-semantic-release-commit`
# 3. we exclude stable which just produce the release tag
# 4. we exclude `semantic-release` commits like when merging `release` on `dev`
# 5. run on every branches
build-docker:
  extends: .docker:image:build
  rules:
    - !reference [.rules-map, not-on-schedule]
    - !reference [.rules-map, not-on-draft]
    - !reference [.rules-map, on-release-tag]
    - !reference [.rules-map, on-testing-tag]
    - !reference [.rules-map, not-on-stable]
    - !reference [.rules-map, not-on-testing]
    - !reference [.rules-map, not-on-semantic-release-commit]
    - !reference [.rules-map, on-branch]


###############################################################################
# `release` stage: `new release`, `testing prerelease`
###############################################################################
new release:
  extends:
    - .semantic-release:stable
    - .on-stable

testing prerelease:
  extends:
    - .semantic-release:testing
    - .on-testing
